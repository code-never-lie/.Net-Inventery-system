<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBw0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ8NDQ0NFREWFhURFRUY
        HSggGBolGxUVITEhJSkrLi46Fx8zODMtNygtLiv/2wBDAQoKCg0NDRUNDxUtGRUZKysrLS0rKysrKysr
        KysrKy0tKy0tKys3LTctNy0rLSsrLS0tLS0rKysrKystKysrKyv/wAARCAEDAMIDASIAAhEBAxEB/8QA
        GwABAQEBAQEBAQAAAAAAAAAAAgEAAwQGBQf/xAAaEAEBAQEBAQEAAAAAAAAAAAAAAQIREgMT/8QAGQEB
        AQEBAQEAAAAAAAAAAAAAAQACBAMF/8QAGhEBAQEBAQEBAAAAAAAAAAAAABEBEgITA//aAAwDAQACEQMR
        AD8A/lHG4fG4+05BkXiyLxJOMUjcRHi8Li8SGQpFkXiSSLxeFImh4XFkXiSSFI0hSIpxZFkKQJJC4shS
        JDMlIshSIjIXCkXiQ+UdOMlH43G4fG4XmHF4XF4kHF4XFmUh43D4vERkXhSLxEZFkPiyJDxZC4UiIcKQ
        pkpERkKQpCkCHizJSFxEeFIUiyJJMrwpCkSDjOnGSfh8XhcXheYSLwuLxIOLw/K8RDi8Pi8SGReFIsiI
        yFwpFmURkXhzKzKUGZKZKQpARmVkKZLykMyshzKzJIyFIcizKQyFIUyUyEHlnXyxT8HjcPi8TyDi8Liy
        IhxeHIsiISFMl5LyiHleHMrMhQZkpCmVkJGQpCkWZSGQpCmSmURkKZKZKZSGZKZOZXykMysychTKITJc
        OZKZSc/KO3lgo+f8rw/K+S83Pyvl08r5Sc/K+XSZWZRCZWQ/K+UQ4shyFMghIUyfkpkpzmS8ukysykEy
        UycyUyjAmSmTmTmUnOZKZOZKZRCZKZOZKZSCZWZdJkplJz8s6+WRfO8XyfkplPJzmV8unlfKLn5WZdPK
        zKTn5LycyUyi5zJTLpMlMpOcyUycyUymnOZOZOZKZSCZKZPyUyjAmVkOZKZSgTJTJzJTKMCZKZOZKZSC
        ZKZOZKZSc/LOnGRfO+VmXTysyniHlvLpMlMouflfLp5WZSc/JTLpMlMoucyUycyUyiEyUy6TJTKMc5kp
        k5kpkFzmSmXSZKZRc5lZl0mCmUY5zJTLpMlMpRzmVmXWZKZSjnMlMukyUyjHLyrr5ZVPnPLeXTyvkvAP
        KzJ+V8pBMrMukysyiEyUycyUymoEyUycyUyiEyUycyUyjAmSmTmTmQY5zJTLpMrMowJlZl08lMgxzmSm
        XSZXiUCZKZOZWZRgzK+TkKZVUc/LOvlUY+amVmTmSmWnK5zJTLpMlMouUyUy6TJTKac5kpk5kvKITKzL
        pMnMhrMc5kpl0mSmUXOZOYOZKZDUCZWZdJkplGOflZl08l5FMcpkpl0mSmVVHPyvl0mS8imOcyUycycy
        DHPjOvljVHzUyUycysy9HJAmSmTmSmUcwJlZl0mV8poJFmTmSmQcwZkpk5kpE1mDMlMlMlMgwZkpkpDk
        FazAkXhyLwUweLw5FkFMGQpleFIDBkXhSLxGJIshSFIKYPGPjKmPm5kpk5kpl7OIZlZl0mVmUXOZKZdJ
        kpkHMc5kpl0mVmU3mBMrMukysyKYMyshzJTIrWYEhTJzKyBqDIvC4XBTA4vD43BWokiyFIvBTE4vCkXj
        NMGQpCkWZFMHjHxlVHz8hTJTJzLpcOYMyUyUhSCmBMlIXCkVagSFwpCmRWswJCmSmSkZrUGZKReKK1mJ
        xl4vBWsxuLxeKzWonF4si8FOYkhSNIUZrUTiyKwpiyFIkXopzG4zdZUx+JIciyHMuqvnQZkpk5lZlVqB
        MlIciyCnMDiyH5XgrWYPGLjcZreYki8ZeM1qMyyKK1EkJFZ3WsxlZGd1rMJYKs0xVRhWoUWCUHRisjLo
        x+bIci5h5jsr5sSRZDkXgrWYHF4fF4KcwONx043BW8wONx043Gd1rMc/K8LjcZ301mDxuFxmd1rMFlXj
        NagtwmZ3W8xJCaQpGemoPF4XF4z0YMhSLIsg6MTjHxh0Y/PkdMxsx0zl3V8zMSRfJzJTIrWY58WQ+Lwd
        NZgcbh8bg6bzA4nD4nGd9NZg8Th8TjO+mswONw+JxjfTWYPG4ciyM76bzA4vDmV8s76azAkKQ5g5hnpr
        Mc5lZl2nzOfNno8uEwUw7z5nPmOzHm8M9Xhh0Y/Kz83TOHXOHTOHd0+dnlymF8PRML4HTXLzeF8PR+a/
        mOjy83hvzenw3hnfbXLy/mnh6vDfmzvtvMeTw35vV+bfmxvtrMeX82/N6/zWfJnfbWeXknyKfJ658jny
        Y321HjnyOfF658ynzZ301cx5c/J0nyeifM582eh3jzT5lPm9M+az5is9vNPmUw9M+RT5Cs7+jyfmr1/m
        go+j8iQ8szveLpIsjMDi8aRmZ0rxOMwaxONxmY1vG4vEZnWsKRZGZnWlkORGZZ05CkZgxpZjpJGYMaUh
        SMyYXi8ZgyvGZkH/2Q==
</value>
  </data>
</root>